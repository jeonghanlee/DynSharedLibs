#
.DEFAULT_GOAL := help

.PHONY: help default init distclean deinit

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:


default: help


## Clone Source
init:
ifeq "$(INIT_SRC)" "1"
	git clone $(SRC_GITURL) $(SRC_PATH)
	cd $(SRC_PATH) && git checkout $(SRC_TAG)
else
	$(QUIET)echo "$(SRC_PATH) exists. make distclean first, if one would like to restart it."
endif

deinit: distclean
## Clean Source
distclean: clean
ifneq ($(wildcard $(SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(SRC_PATH)
else
	$(QUIET)echo "There is no $(SRC_PATH)."
endif


.PHONY: task0 task1 task2 task3

build: task0 task1 task2 task3

## Build Source
task0: conf
	$(QUIET) $(MAKE) -C $(MODULE_SRC_TOP)

## Copy the site specific files into sources
conf:
	$(QUIET)echo "EPICS_BASE=$(EPICS_BASE)"               >  $(MODULE_SRC_TOP)/configure/RELEASE.local

clean:
ifneq ($(wildcard $(MODULE_SRC_TOP)/.*),)
	$(QUIET) $(MAKE) -C $(MODULE_SRC_TOP) clean
	$(QUIET) rm -f $(REG_OBJ) $(REG_SRC) $(EXPORT_ADDR_SRC) $(EXPORT_ADDR_OBJ) $(SHAREDLIB)
	$(QUIET) rm -rf $(INSTALL_LOCATION)
else
	$(QUIET)echo "There is no $(MODULE_SRC_TOP)."
endif

distclean.src:
	$(QUIET) $(MAKE) -C $(MODULE_SRC_PATH) distclean

.PHONY: $(REG_SRC)

task1: task0 $(REG_OBJ)

$(REG_OBJ): $(REG_SRC)
	$(QUIET)rm -f $@
	$(QUIET)echo "Compiling ... $<"
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

$(REG_SRC):
	$(QUIET)rm -f $@
	$(QUIET)echo "Generating .... $@"
	$(REGISTERRECORDDEVICEDRIVER) $(MODULE_DBD_PATH)/$(APP_DBD) $(APPNAME)_registerRecordDeviceDriver | grep -v iocshRegisterCommon > $@

.PHONY: $(EXPORT_ADDR_SRC)

task2: $(EXPORT_ADDR_OBJ)

$(EXPORT_ADDR_OBJ): $(EXPORT_ADDR_SRC) 
	$(QUIET)rm -f $@
	$(QUIET)echo "Compiling ... $<"
	$(COMPILE.c) $(OUTPUT_OPTION) $<

$(EXPORT_ADDR_SRC):
	$(QUIET)rm -f $@
	nm  $(REG_OBJ) $(SRC_OBJS) | awk '$(makexportfile)' > $@

task3: $(SHAREDLIB)

$(SHAREDLIB): $(EXPORT_ADDR_OBJ) 
	$(CXX) -o $@ $(LDFLAGS) $< $(SRC_OBJS) $(REG_OBJ)  -lpthread -lm -lrt -ldl -lgcc

.FORCE:
